// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Zones {
  id             Int           @id @default(autoincrement())
  zone           Int           @unique
  description    String
  notableRegions String
  Users          Users?
  Plants         Plants?
  Gardens        Gardens?
  GardenPlants   GardenPlants?
  UserEmails     UserEmails?
}

model Users {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  firstName   String
  lastName    String
  zoneId      Int          @unique
  zone        Zones        @relation(fields: [zoneId], references: [id])
  gardenXp    Int
  gardens     Gardens[]
  PlantReview PlantReview?
}

model Plants {
  id           Int           @id @default(autoincrement())
  plant        String
  apiId        String
  isEasy       Boolean
  count        Int
  zoneId       Int           @unique
  zone         Zones         @relation(fields: [zoneId], references: [id])
  PlantReview  PlantReview?
  GardenPlants GardenPlants?
  ZoneKeywords ZoneKeywords?
  UserEmails   UserEmails?
}

model PlantReview {
  id         Int         @id @default(autoincrement())
  review     String
  createdAt  DateTime    @default(now())
  userId     Int         @unique
  user       Users       @relation(fields: [userId], references: [id])
  plantId    Int         @unique
  plant      Plants      @relation(fields: [plantId], references: [id])
  UserEmails UserEmails?
}

model Gardens {
  id           Int            @id @default(autoincrement())
  listName     String
  gardenPlants GardenPlants[]
  userId       Int            @unique
  user         Users          @relation(fields: [userId], references: [id])
  zoneId       Int            @unique
  zone         Zones          @relation(fields: [zoneId], references: [id])
}

model GardenPlants {
  id        Int      @id @default(autoincrement())
  plantId   Int      @unique
  plant     Plants   @relation(fields: [plantId], references: [id])
  zoneId    Int      @unique
  zone      Zones    @relation(fields: [zoneId], references: [id])
  Gardens   Gardens? @relation(fields: [gardensId], references: [id])
  gardensId Int?
}

model Keywords {
  id           Int           @id @default(autoincrement())
  keyword      Int           @unique
  ZoneKeywords ZoneKeywords?
}

model ZoneKeywords {
  id        Int      @id @default(autoincrement())
  zoneId    Int      @unique
  zone      Plants   @relation(fields: [zoneId], references: [id])
  keywordId Int      @unique
  keyword   Keywords @relation(fields: [keywordId], references: [id])
}

model UserEmails {
  id        Int         @id @default(autoincrement())
  userEmail String      @unique
  zoneId    Int         @unique
  zone      Zones       @relation(fields: [zoneId], references: [id])
  plantId   Int         @unique
  plant     Plants      @relation(fields: [plantId], references: [id])
  reviewId  Int         @unique
  review    PlantReview @relation(fields: [reviewId], references: [id])
}
